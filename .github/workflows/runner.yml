name: CI

# Event triggers
on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: renyas/yourimagename:latest
          platforms: linux/arm64

  validate_and_tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
      - name: Create .kube directory
        run: mkdir -p $HOME/.kube

      - name: Set up KUBECONFIG
        run: echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Infrastructure Test - Check Kubernetes Nodes
        run: kubectl get nodes

      - name: Infrastructure Test - Check Kubernetes Pods
        run: kubectl get pods --all-namespaces

      - name: Infrastructure Test - Check Kubernetes Services
        run: kubectl get services --all-namespaces

  deploy:
    runs-on: ubuntu-latest
    needs: validate_and_tests

    steps:
      - uses: actions/checkout@v3

      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
      - name: Set up KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes-config/deploy.yaml
          kubectl rollout status deployment/group03 -n group03

      - name: Restart Deployment
        run: |
          kubectl rollout restart deployment/group03 -n group03

      # Additional steps to deploy Grafana.
      - name: Create Grafana Namespace
        run: kubectl create namespace grafana || true

      - name: Deploy Grafana Deployment
        run: kubectl apply -f kubernetes-config/grafana-deployment.yaml

      - name: Deploy Grafana Service
        run: kubectl apply -f kubernetes-config/grafana-service.yaml

      - name: Deploy Grafana Ingress
        run: kubectl apply -f kubernetes-config/grafana-ingress.yaml

      - name: Check Grafana Deployment Status
        run: kubectl rollout status deployment/grafana -n grafana

  deploy_ingress_controller:
  runs-on: ubuntu-latest

  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install NGINX Ingress Controller
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml --validate=false

